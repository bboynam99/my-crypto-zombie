{"ast":null,"code":"import _classCallCheck from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\my-crypto-zombie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import MyWeb3 from'./MyWeb3';import ZombiePreview from\"./ZombiePreview\";import'./static/ZombiePreview.css';import moment from\"moment\";var NewZombie=/*#__PURE__*/function(_Component){_inherits(NewZombie,_Component);function NewZombie(props){var _this;_classCallCheck(this,NewZombie);_this=_possibleConstructorReturn(this,_getPrototypeOf(NewZombie).call(this,props));_this.selectZombie=function(index){var _active=_this.state.active;var prev_active=_active[index];for(var i=0;i<_this.state.myZombies.length;i++){_active[i]=0;}_active[index]=prev_active===0||prev_active===undefined?1:0;_this.setState({active:_active,buttonTxt:'用'+_this.state.myZombies[index].name,myZombie:_this.state.myZombies[index],myZombieId:_this.state.myZombies[index].zombieId,AttackBtn:function AttackBtn(){return React.createElement(\"button\",{className:\"attack-btn\",onClick:_this.zombieAttack},React.createElement(\"span\",{role:\"img\"},\"Choose \",_this.state.myZombies[index].name,\"\\uFF01\"));}});};var searchParams=new URLSearchParams(window.location.search);var id=searchParams.get('id');_this.state={targetId:id,targetZombie:{},myZombies:[],myZombie:{},myZombieId:'',active:{},buttonTxt:'',modalDisplay:'none',transactionHash:'',AttackBtn:function AttackBtn(){return React.createElement(\"button\",{className:\"attack-btn\"},React.createElement(\"span\",{role:\"img\",\"aria-label\":\"zombie\"},\"Choose \\uD83E\\uDDDF\\u200D\\u2642\\uFE0F \\uFF01\"));}};_this.selectZombie=_this.selectZombie.bind(_assertThisInitialized(_this));_this.zombieAttack=_this.zombieAttack.bind(_assertThisInitialized(_this));return _this;}_createClass(NewZombie,[{key:\"componentDidMount\",value:function componentDidMount(){var that=this;var ethereum=window.ethereum;if(typeof ethereum!=='undefined'||typeof window.web3!=='undefined'){MyWeb3.init().then(function(res){that.getZombie(that.state.targetId);that.getMyZombies();});}else{alert('You have to install MetaMask !');}}},{key:\"getZombie\",value:function getZombie(zombieId){var that=this;MyWeb3.zombies(zombieId).then(function(result){that.setState({targetZombie:result});});}},{key:\"getMyZombies\",value:function getMyZombies(){var that=this;MyWeb3.getZombiesByOwner().then(function(zombies){if(zombies.length>0){var _loop=function _loop(i){MyWeb3.zombies(zombies[i]).then(function(result){var _zombies=that.state.myZombies;result.zombieId=zombies[i];if(result.readyTime===0||moment().format('X')>result.readyTime){_zombies.push(result);}that.setState({myZombies:_zombies});});};for(var i=0;i<zombies.length;i++){_loop(i);}}});}},{key:\"zombieAttack\",value:function zombieAttack(){var that=this;if(this.state.myZombie!==undefined){this.setState({modalDisplay:''});MyWeb3.attack(this.state.myZombieId,this.state.targetId).then(function(transactionHash){that.setState({transactionHash:transactionHash,AttackBtn:function AttackBtn(){return React.createElement(\"div\",null);}});});}}},{key:\"render\",value:function render(){var _this2=this;var AttackBtn=this.state.AttackBtn;if(this.state.myZombies.length>0){return React.createElement(\"div\",{className:\"App zombie-attack\"},React.createElement(\"div\",{className:\"modal\",style:{display:this.state.modalDisplay}},React.createElement(\"div\",{className:\"battelArea\"},React.createElement(\"div\",{className:\"targetZombie\"},React.createElement(ZombiePreview,{zombie:this.state.targetZombie})),React.createElement(\"div\",{className:\"vs\"},\"VS\"),React.createElement(\"div\",{className:\"myZombie\"},React.createElement(ZombiePreview,{zombie:this.state.myZombie}))),React.createElement(\"div\",null,React.createElement(\"h2\",null,this.state.transactionHash))),React.createElement(\"div\",{className:\"row zombie-parts-bin-component\"},React.createElement(\"div\",{className:\"game-card home-card target-card\"},React.createElement(\"div\",{className:\"zombie-char\"},React.createElement(ZombiePreview,{zombie:this.state.targetZombie}))),React.createElement(\"div\",{className:\"zombie-detail\"},React.createElement(\"div\",{className:\"flex\"},this.state.myZombies.map(function(item,index){var name=item.name;var level=item.level;return React.createElement(\"div\",{className:\"game-card home-card selectable\",key:index,active:_this2.state.active[index]||0,onClick:function onClick(){return _this2.selectZombie(index);}},React.createElement(\"div\",{className:\"zombie-char\"},React.createElement(ZombiePreview,{zombie:item}),React.createElement(\"div\",{className:\"zombie-card card bg-shaded\"},React.createElement(\"div\",{className:\"card-header bg-dark hide-overflow-text\"},React.createElement(\"strong\",null,name)),React.createElement(\"small\",{className:\"hide-overflow-text\"},\"CryptoZombie LV\",level))));})),React.createElement(AttackBtn,null))));}else{return React.createElement(\"div\",null,\"No Zombie\");}}}]);return NewZombie;}(Component);export default NewZombie;","map":{"version":3,"sources":["C:/my-crypto-zombie/src/ZombieAttack.js"],"names":["React","Component","MyWeb3","ZombiePreview","moment","NewZombie","props","selectZombie","index","_active","state","active","prev_active","i","myZombies","length","undefined","setState","buttonTxt","name","myZombie","myZombieId","zombieId","AttackBtn","zombieAttack","searchParams","URLSearchParams","window","location","search","id","get","targetId","targetZombie","modalDisplay","transactionHash","bind","that","ethereum","web3","init","then","res","getZombie","getMyZombies","alert","zombies","result","getZombiesByOwner","_zombies","readyTime","format","push","attack","display","map","item","level"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MyWeb3 from './MyWeb3'\r\nimport ZombiePreview from \"./ZombiePreview\"\r\nimport './static/ZombiePreview.css'\r\nimport moment from \"moment\"\r\n\r\nclass NewZombie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const searchParams = new URLSearchParams(window.location.search)\r\n        const id = searchParams.get('id')   \r\n        this.state = {\r\n            targetId:id ,\r\n            targetZombie:{},\r\n            myZombies:[],\r\n            myZombie:{},\r\n            myZombieId:'',\r\n            active: {},\r\n            buttonTxt:'',\r\n            modalDisplay:'none',\r\n            transactionHash:'',\r\n            AttackBtn:()=>{\r\n                return( <button className=\"attack-btn\">\r\n                            <span role=\"img\" aria-label=\"zombie\">\r\n                                Choose 🧟‍♂️ ！\r\n                            </span>\r\n                        </button>\r\n                )\r\n            }\r\n        }\r\n        this.selectZombie = this.selectZombie.bind(this)\r\n        this.zombieAttack = this.zombieAttack.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        let that = this\r\n        let ethereum = window.ethereum\r\n        if (typeof  ethereum !== 'undefined' || (typeof window.web3 !== 'undefined')) {\r\n            MyWeb3.init().then(function(res){\r\n                that.getZombie(that.state.targetId)\r\n                that.getMyZombies()\r\n            })\r\n        }else {\r\n            alert('You have to install MetaMask !')\r\n        }\r\n    }\r\n    \r\n    getZombie(zombieId){\r\n        let that = this\r\n        MyWeb3.zombies(zombieId).then(function (result) {\r\n            that.setState({targetZombie:result})\r\n        })\r\n    }\r\n    getMyZombies(){\r\n        let that = this\r\n        MyWeb3.getZombiesByOwner().then(function(zombies){\r\n            if(zombies.length > 0){\r\n                for(let i=0;i<zombies.length;i++){\r\n                    MyWeb3.zombies(zombies[i]).then(function (result) {\r\n                        let _zombies = that.state.myZombies\r\n                        result.zombieId = zombies[i]\r\n                        if(result.readyTime === 0 || moment().format('X')>result.readyTime){\r\n                            _zombies.push(result)\r\n                        }\r\n                        that.setState({myZombies:_zombies})\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    selectZombie = index => {\r\n        var _active = this.state.active\r\n        var prev_active = _active[index]\r\n        for(var i=0;i<this.state.myZombies.length;i++){\r\n            _active[i] = 0\r\n        }\r\n        _active[index] = prev_active === 0 || prev_active === undefined ? 1 : 0\r\n        this.setState({\r\n            active:_active,buttonTxt:'用'+this.state.myZombies[index].name,\r\n            myZombie:this.state.myZombies[index],\r\n            myZombieId:this.state.myZombies[index].zombieId,\r\n            AttackBtn:()=>{\r\n                return( <button className=\"attack-btn\" onClick={this.zombieAttack}>\r\n                            <span role=\"img\">\r\n                                Choose {this.state.myZombies[index].name}！\r\n                            </span>\r\n                        </button>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    zombieAttack(){\r\n        let that = this\r\n        if(this.state.myZombie !== undefined){\r\n            this.setState({modalDisplay:''})\r\n            MyWeb3.attack(this.state.myZombieId,this.state.targetId)\r\n            .then(function(transactionHash){\r\n                that.setState({\r\n                    transactionHash:transactionHash,\r\n                    AttackBtn : () =>{\r\n                    return(<div></div>)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n    render() { \r\n        let AttackBtn = this.state.AttackBtn\r\n        if(this.state.myZombies.length>0) {\r\n            return ( \r\n                <div className=\"App zombie-attack\">\r\n                <div\r\n                    className=\"modal\"\r\n                    style={{\r\n                        display:this.state.modalDisplay\r\n                    }}\r\n                >\r\n                    <div className='battelArea'>\r\n                        <div className='targetZombie'>\r\n                            <ZombiePreview zombie={this.state.targetZombie}></ZombiePreview>\r\n                        </div>\r\n                        <div className='vs'>\r\n                            VS\r\n                        </div>\r\n                        <div className='myZombie'>\r\n                            <ZombiePreview zombie={this.state.myZombie}></ZombiePreview>\r\n                        </div>\r\n                    </div>\r\n                    <div><h2>{this.state.transactionHash}</h2></div>\r\n                </div>\r\n                    <div  className=\"row zombie-parts-bin-component\" >\r\n                        <div  className=\"game-card home-card target-card\" >\r\n                            <div className=\"zombie-char\">\r\n                                <ZombiePreview zombie={this.state.targetZombie}></ZombiePreview>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"zombie-detail\">\r\n                            <div className=\"flex\">\r\n                                {this.state.myZombies.map((item,index)=>{\r\n                                    var name = item.name\r\n                                    var level = item.level\r\n                                    return(\r\n                                        <div className=\"game-card home-card selectable\" key={index} active={this.state.active[index] || 0} onClick={() => this.selectZombie(index)} >\r\n                                            <div className=\"zombie-char\">\r\n                                            <ZombiePreview zombie={item}></ZombiePreview>\r\n                                                <div className=\"zombie-card card bg-shaded\">\r\n                                                    <div className=\"card-header bg-dark hide-overflow-text\">\r\n                                                        <strong>{name}</strong>\r\n                                                    </div>\r\n                                                    <small className=\"hide-overflow-text\">CryptoZombie LV{level}</small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <AttackBtn></AttackBtn>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else{\r\n            return(\r\n                <div>No Zombie</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default NewZombie;"]},"metadata":{},"sourceType":"module"}