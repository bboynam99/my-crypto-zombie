{"ast":null,"code":"import Web3 from\"web3\";import abi from'./ZombieCore.json';import ContractAddress from'./ContractAddress';var MyWeb3={init:function init(){/*\r\n        '1': Ethereum Main Network\r\n        '2': Morden Test network\r\n        '3': Ropsten Test Network\r\n        '4': Rinkeby Test Network\r\n        '5': Goerli Test Network\r\n        '42': Kovan Test Network\r\n        */return new Promise(function(resolve,reject){//let currentChainId = parseInt(window.ethereum.chainId, 16)\nvar ethereum=window.ethereum;//禁止自动刷新，metamask要求写的\nethereum.autoRefreshOnNetworkChange=false;//开始调用metamask\nethereum.enable().then(function(accounts){//初始化provider\nvar provider=window['ethereum']||window.web3.currentProvider;//初始化Web3\nwindow.web3=new Web3(provider);//获取到当前以太坊网络id\nwindow.web3.eth.net.getId().then(function(result){var currentChainId=result;//设置最大监听器数量，否则出现warning\nwindow.web3.currentProvider.setMaxListeners(300);//从json获取到当前网络id下的合约地址\nvar currentContractAddress=ContractAddress[currentChainId];if(currentContractAddress!==undefined){//实例化合约\nwindow.MyContract=new window.web3.eth.Contract(abi.abi,currentContractAddress);//获取到当前默认的以太坊地址\nwindow.defaultAccount=accounts[0].toLowerCase();//that.allEvents(window.MyContract)\nresolve(true);}else{reject('Unknow Your ChainId:'+currentChainId);}});}).catch(function(error){console.log(error);});});},//僵尸总量\nzombieCount:function zombieCount(){return new Promise(function(resolve,reject){window.MyContract.methods.zombieCount().call().then(function(zombieCount){resolve(zombieCount);});});},//获得单个僵尸数据\nzombies:function zombies(zombieId){return new Promise(function(resolve,reject){if(zombieId>=0){window.MyContract.methods.zombies(zombieId).call().then(function(zombies){resolve(zombies);});}});},//获得僵尸拥有者地址\nzombieToOwner:function zombieToOwner(zombieId){return new Promise(function(resolve,reject){if(zombieId>=0){window.MyContract.methods.zombieToOwner(zombieId).call().then(function(zombies){resolve(zombies.toLowerCase());});}});},//获得当前用户的所有僵尸id\ngetZombiesByOwner:function getZombiesByOwner(){return new Promise(function(resolve,reject){window.MyContract.methods.getZombiesByOwner(window.defaultAccount).call().then(function(zombies){resolve(zombies);});});},//创建随机僵尸\ncreateZombie:function createZombie(_name){return new Promise(function(resolve,reject){window.MyContract.methods.createZombie(_name).send({from:window.defaultAccount}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//购买僵尸\nbuyZombie:function buyZombie(_name){return new Promise(function(resolve,reject){window.MyContract.methods.zombiePrice().call().then(function(zombiePrice){window.MyContract.methods.buyZombie(_name).send({from:window.defaultAccount,value:zombiePrice}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});});},//僵尸对战\nattack:function attack(_zombieId,_targetId){return new Promise(function(resolve,reject){window.MyContract.methods.attack(_zombieId,_targetId).send({from:window.defaultAccount}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//僵尸改名\nchangeName:function changeName(_zombieId,_name){return new Promise(function(resolve,reject){window.MyContract.methods.changeName(_zombieId,_name).send({from:window.defaultAccount}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//僵尸喂食\nfeed:function feed(_zombieId){return new Promise(function(resolve,reject){window.MyContract.methods.feed(_zombieId).send({from:window.defaultAccount}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//僵尸付费升级\nlevelUp:function levelUp(_zombieId){return new Promise(function(resolve,reject){window.MyContract.methods.levelUpFee().call().then(function(levelUpFee){window.MyContract.methods.levelUp(_zombieId).send({from:window.defaultAccount,value:levelUpFee}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});});},//获取僵尸喂食次数\nzombieFeedTimes:function zombieFeedTimes(_zombieId){return new Promise(function(resolve,reject){window.MyContract.methods.zombieFeedTimes(_zombieId).call().then(function(zombieFeedTimes){resolve(zombieFeedTimes);});});},//获取最低售价\nminPrice:function minPrice(){return new Promise(function(resolve,reject){window.MyContract.methods.minPrice().call().then(function(minPrice){resolve(window.web3.utils.fromWei(minPrice,'ether'));});});},//获取税金\ntax:function tax(){return new Promise(function(resolve,reject){window.MyContract.methods.tax().call().then(function(tax){resolve(window.web3.utils.fromWei(tax,'ether'));});});},//出售我的僵尸\nsaleMyZombie:function saleMyZombie(_zombieId,_price){return new Promise(function(resolve,reject){window.MyContract.methods.saleMyZombie(_zombieId,window.web3.utils.toWei(_price.toString())).send({from:window.defaultAccount}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//获得商店里僵尸数据\nzombieShop:function zombieShop(_zombieId){return new Promise(function(resolve,reject){window.MyContract.methods.zombieShop(_zombieId).call().then(function(shopInfo){shopInfo.price=window.web3.utils.fromWei(shopInfo.price,'ether');resolve(shopInfo);});});},//获得商店所有僵尸\ngetShopZombies:function getShopZombies(){return new Promise(function(resolve,reject){window.MyContract.methods.getShopZombies().call().then(function(zombieIds){resolve(zombieIds);});});},//购买商店里的僵尸\nbuyShopZombie:function buyShopZombie(_zombieId,_price){return new Promise(function(resolve,reject){window.MyContract.methods.buyShopZombie(_zombieId).send({from:window.defaultAccount,value:window.web3.utils.toWei(_price.toString())}).on('transactionHash',function(transactionHash){resolve(transactionHash);}).on('confirmation',function(confirmationNumber,receipt){console.log({confirmationNumber:confirmationNumber,receipt:receipt});}).on('receipt',function(receipt){console.log({receipt:receipt});window.location.reload();}).on('error',function(error,receipt){console.log({error:error,receipt:receipt});reject({error:error,receipt:receipt});});});},//获得合约拥有者地址\nowner:function owner(){return new Promise(function(resolve,reject){window.MyContract.methods.owner().call().then(function(owner){resolve(owner.toLowerCase());});});},//获得合约名称\nname:function name(){return new Promise(function(resolve,reject){window.MyContract.methods.name().call().then(function(name){resolve(name);});});},//获得合约标识\nsymbol:function symbol(){return new Promise(function(resolve,reject){window.MyContract.methods.symbol().call().then(function(symbol){resolve(symbol);});});},//查询余额\ncheckBalance:function checkBalance(){var _this=this;return new Promise(function(resolve,reject){_this.owner().then(function(owner){if(window.defaultAccount===owner){window.MyContract.methods.checkBalance().call({from:window.defaultAccount}).then(function(balance){resolve(window.web3.utils.fromWei(balance,'ether'));});}else{reject('You are not contract owner');}});});},//设置攻击胜率\nsetAttackVictoryProbability:function setAttackVictoryProbability(_attackVictoryProbability){return new Promise(function(resolve,reject){window.MyContract.methods.setAttackVictoryProbability(_attackVictoryProbability).send({from:window.defaultAccount}).then(function(result){resolve(result);});});},//获得升级费\nlevelUpFee:function levelUpFee(){return new Promise(function(resolve,reject){window.MyContract.methods.levelUpFee().call().then(function(levelUpFee){resolve(window.web3.utils.fromWei(levelUpFee,'ether'));});});},//设置升级费\nsetLevelUpFee:function setLevelUpFee(_fee){return new Promise(function(resolve,reject){window.MyContract.methods.setLevelUpFee(window.web3.utils.toWei(_fee.toString())).send({from:window.defaultAccount}).then(function(result){resolve(result);});});},//设置最低售价\nsetMinPrice:function setMinPrice(_value){return new Promise(function(resolve,reject){window.MyContract.methods.setMinPrice(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount}).then(function(result){resolve(result);});});},//获得僵尸售价\nzombiePrice:function zombiePrice(){return new Promise(function(resolve,reject){window.MyContract.methods.zombiePrice().call().then(function(zombiePrice){resolve(window.web3.utils.fromWei(zombiePrice,'ether'));});});},//设置僵尸售价\nsetZombiePrice:function setZombiePrice(_value){return new Promise(function(resolve,reject){window.MyContract.methods.setZombiePrice(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount}).then(function(result){resolve(result);});});},//设置税金\nsetTax:function setTax(_value){return new Promise(function(resolve,reject){window.MyContract.methods.setTax(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount}).then(function(result){resolve(result);});});},//提款\nwithdraw:function withdraw(){var _this2=this;return new Promise(function(resolve,reject){_this2.owner().then(function(owner){if(window.defaultAccount===owner){window.MyContract.methods.withdraw().send({from:window.defaultAccount}).then(function(res){resolve(res);});}else{reject('You are not contract owner');}});});},//新僵尸事件\nEventNewZombie:function EventNewZombie(){return window.MyContract.events.NewZombie({},{fromBlock:0,toBlock:'latest'});},//出售僵尸事件\nEventSaleZombie:function EventSaleZombie(){return new Promise(function(resolve,reject){window.MyContract.events.SaleZombie({fromBlock:0,toBlock:'latest'},function(error,event){resolve(event);});});},//所有事件\nallEvents:function allEvents(){window.MyContract.events.allEvents({fromBlock:0},function(error,event){console.log({allEvents:event});}).on(\"connected\",function(subscriptionId){console.log({connected_subscriptionId:subscriptionId});}).on('data',function(event){console.log({event_data:event});}).on('changed',function(event){console.log({event_changed:event});}).on('error',function(error,receipt){console.log({event_error:error,receipt:receipt});});}};export default MyWeb3;","map":{"version":3,"sources":["C:/my-crypto-zombie/src/MyWeb3.js"],"names":["Web3","abi","ContractAddress","MyWeb3","init","Promise","resolve","reject","ethereum","window","autoRefreshOnNetworkChange","enable","then","accounts","provider","web3","currentProvider","eth","net","getId","result","currentChainId","setMaxListeners","currentContractAddress","undefined","MyContract","Contract","defaultAccount","toLowerCase","catch","error","console","log","zombieCount","methods","call","zombies","zombieId","zombieToOwner","getZombiesByOwner","createZombie","_name","send","from","on","transactionHash","confirmationNumber","receipt","location","reload","buyZombie","zombiePrice","value","attack","_zombieId","_targetId","changeName","feed","levelUp","levelUpFee","zombieFeedTimes","minPrice","utils","fromWei","tax","saleMyZombie","_price","toWei","toString","zombieShop","shopInfo","price","getShopZombies","zombieIds","buyShopZombie","owner","name","symbol","checkBalance","balance","setAttackVictoryProbability","_attackVictoryProbability","setLevelUpFee","_fee","setMinPrice","_value","setZombiePrice","setTax","withdraw","res","EventNewZombie","events","NewZombie","fromBlock","toBlock","EventSaleZombie","SaleZombie","event","allEvents","subscriptionId","connected_subscriptionId","event_data","event_changed","event_error"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,MAAM,CAAE,CACVC,IADU,gBACH,CACH;;;;;;;UAQA,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC;AACA,GAAIC,CAAAA,QAAQ,CAAGC,MAAM,CAACD,QAAtB,CACA;AACAA,QAAQ,CAACE,0BAAT,CAAsC,KAAtC,CACA;AACAF,QAAQ,CAACG,MAAT,GAAkBC,IAAlB,CAAuB,SAAUC,QAAV,CAAoB,CACvC;AACA,GAAIC,CAAAA,QAAQ,CAAGL,MAAM,CAAC,UAAD,CAAN,EAAsBA,MAAM,CAACM,IAAP,CAAYC,eAAjD,CACA;AACAP,MAAM,CAACM,IAAP,CAAc,GAAIf,CAAAA,IAAJ,CAASc,QAAT,CAAd,CACA;AACAL,MAAM,CAACM,IAAP,CAAYE,GAAZ,CAAgBC,GAAhB,CAAoBC,KAApB,GAA4BP,IAA5B,CAAiC,SAAUQ,MAAV,CAAkB,CAC/C,GAAIC,CAAAA,cAAc,CAAGD,MAArB,CACA;AACAX,MAAM,CAACM,IAAP,CAAYC,eAAZ,CAA4BM,eAA5B,CAA4C,GAA5C,EACA;AACA,GAAIC,CAAAA,sBAAsB,CAAGrB,eAAe,CAACmB,cAAD,CAA5C,CACA,GAAGE,sBAAsB,GAAKC,SAA9B,CAAwC,CACpC;AACAf,MAAM,CAACgB,UAAP,CAAoB,GAAIhB,CAAAA,MAAM,CAACM,IAAP,CAAYE,GAAZ,CAAgBS,QAApB,CAA6BzB,GAAG,CAACA,GAAjC,CAAqCsB,sBAArC,CAApB,CACA;AACAd,MAAM,CAACkB,cAAP,CAAwBd,QAAQ,CAAC,CAAD,CAAR,CAAYe,WAAZ,EAAxB,CACA;AACAtB,OAAO,CAAC,IAAD,CAAP,CACH,CAPD,IAOK,CACDC,MAAM,CAAC,uBAAuBc,cAAxB,CAAN,CACH,CACJ,CAhBD,EAiBH,CAvBD,EAuBGQ,KAvBH,CAuBS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAzBD,EA0BH,CAhCM,CAAP,CAiCH,CA3CS,CA4CV;AACAG,WA7CU,uBA6CI,CACV,MAAO,IAAI5B,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BD,WAA1B,GAAwCE,IAAxC,GAA+CvB,IAA/C,CAAoD,SAASqB,WAAT,CAAsB,CACtE3B,OAAO,CAAC2B,WAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAnDS,CAoDV;AACAG,OArDU,kBAqDFC,QArDE,CAqDO,CACb,MAAO,IAAIhC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,GAAG8B,QAAQ,EAAE,CAAb,CAAe,CACX5B,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BE,OAA1B,CAAkCC,QAAlC,EAA4CF,IAA5C,GAAmDvB,IAAnD,CAAwD,SAASwB,OAAT,CAAkB,CACtE9B,OAAO,CAAC8B,OAAD,CAAP,CACH,CAFD,EAGH,CACJ,CANM,CAAP,CAOH,CA7DS,CA8DV;AACAE,aA/DU,wBA+DID,QA/DJ,CA+Da,CACnB,MAAO,IAAIhC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,GAAG8B,QAAQ,EAAE,CAAb,CAAe,CACX5B,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BI,aAA1B,CAAwCD,QAAxC,EAAkDF,IAAlD,GAAyDvB,IAAzD,CAA8D,SAASwB,OAAT,CAAkB,CAC5E9B,OAAO,CAAC8B,OAAO,CAACR,WAAR,EAAD,CAAP,CACH,CAFD,EAGH,CACJ,CANM,CAAP,CAOH,CAvES,CAwEV;AACAW,iBAzEU,6BAyES,CACf,MAAO,IAAIlC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BK,iBAA1B,CAA4C9B,MAAM,CAACkB,cAAnD,EAAmEQ,IAAnE,GAA0EvB,IAA1E,CAA+E,SAASwB,OAAT,CAAkB,CAC7F9B,OAAO,CAAC8B,OAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CA/ES,CAgFV;AACAI,YAjFU,uBAiFGC,KAjFH,CAiFS,CACf,MAAO,IAAIpC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BM,YAA1B,CAAuCC,KAAvC,EAA8CC,IAA9C,CAAmD,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAnD,EACCiB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CAnGS,CAoGV;AACAG,SArGU,oBAqGAT,KArGA,CAqGM,CACZ,MAAO,IAAIpC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BiB,WAA1B,GAAwChB,IAAxC,GAA+CvB,IAA/C,CAAoD,SAASuC,WAAT,CAAsB,CACtE1C,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BgB,SAA1B,CAAoCT,KAApC,EAA2CC,IAA3C,CAAgD,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA4ByB,KAAK,CAACD,WAAlC,CAAhD,EACCP,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBD,EAiBH,CAlBM,CAAP,CAmBH,CAzHS,CA0HV;AACAM,MA3HU,iBA2HHC,SA3HG,CA2HOC,SA3HP,CA2HiB,CACvB,MAAO,IAAIlD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BmB,MAA1B,CAAiCC,SAAjC,CAA2CC,SAA3C,EAAsDb,IAAtD,CAA2D,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA3D,EACCiB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CA7IS,CA8IV;AACAS,UA/IU,qBA+ICF,SA/ID,CA+IWb,KA/IX,CA+IiB,CACvB,MAAO,IAAIpC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BsB,UAA1B,CAAqCF,SAArC,CAA+Cb,KAA/C,EAAsDC,IAAtD,CAA2D,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA3D,EACCiB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CAjKS,CAkKV;AACAU,IAnKU,eAmKLH,SAnKK,CAmKK,CACX,MAAO,IAAIjD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BuB,IAA1B,CAA+BH,SAA/B,EAA0CZ,IAA1C,CAA+C,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA/C,EACCiB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CArLS,CAsLV;AACAW,OAvLU,kBAuLFJ,SAvLE,CAuLQ,CACd,MAAO,IAAIjD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0ByB,UAA1B,GAAuCxB,IAAvC,GAA8CvB,IAA9C,CAAmD,SAAS+C,UAAT,CAAqB,CACpElD,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BwB,OAA1B,CAAkCJ,SAAlC,EAA6CZ,IAA7C,CAAkD,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA4ByB,KAAK,CAACO,UAAlC,CAAlD,EACCf,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBD,EAiBH,CAlBM,CAAP,CAmBH,CA3MS,CA4MV;AACAa,eA7MU,0BA6MMN,SA7MN,CA6MgB,CACtB,MAAO,IAAIjD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B0B,eAA1B,CAA0CN,SAA1C,EAAqDnB,IAArD,GAA4DvB,IAA5D,CAAiE,SAASgD,eAAT,CAA0B,CACvFtD,OAAO,CAACsD,eAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAnNS,CAoNV;AACAC,QArNU,oBAqNA,CACN,MAAO,IAAIxD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B2B,QAA1B,GAAqC1B,IAArC,GAA4CvB,IAA5C,CAAiD,SAASiD,QAAT,CAAmB,CAChEvD,OAAO,CAACG,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BF,QAA1B,CAAmC,OAAnC,CAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CA3NS,CA4NV;AACAG,GA7NU,eA6NL,CACD,MAAO,IAAI3D,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B8B,GAA1B,GAAgC7B,IAAhC,GAAuCvB,IAAvC,CAA4C,SAASoD,GAAT,CAAc,CACtD1D,OAAO,CAACG,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,OAA9B,CAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAnOS,CAoOV;AACAC,YArOU,uBAqOGX,SArOH,CAqOaY,MArOb,CAqOoB,CAC1B,MAAO,IAAI7D,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B+B,YAA1B,CAAuCX,SAAvC,CAAiD7C,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBD,MAAM,CAACE,QAAP,EAAxB,CAAjD,EAA6F1B,IAA7F,CAAkG,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAlG,EACCiB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CAvPS,CAwPV;AACAsB,UAzPU,qBAyPCf,SAzPD,CAyPW,CACjB,MAAO,IAAIjD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BmC,UAA1B,CAAqCf,SAArC,EAAgDnB,IAAhD,GAAuDvB,IAAvD,CAA4D,SAAS0D,QAAT,CAAmB,CAC3EA,QAAQ,CAACC,KAAT,CAAiB9D,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BO,QAAQ,CAACC,KAAnC,CAAyC,OAAzC,CAAjB,CACAjE,OAAO,CAACgE,QAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CAhQS,CAiQV;AACAE,cAlQU,0BAkQM,CACZ,MAAO,IAAInE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BsC,cAA1B,GAA2CrC,IAA3C,GAAkDvB,IAAlD,CAAuD,SAAS6D,SAAT,CAAoB,CACvEnE,OAAO,CAACmE,SAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAxQS,CAyQV;AACAC,aA1QU,wBA0QIpB,SA1QJ,CA0QcY,MA1Qd,CA0QqB,CAC3B,MAAO,IAAI7D,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BwC,aAA1B,CAAwCpB,SAAxC,EAAmDZ,IAAnD,CAAwD,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA4ByB,KAAK,CAAC3C,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBD,MAAM,CAACE,QAAP,EAAxB,CAAlC,CAAxD,EACCxB,EADD,CACI,iBADJ,CACuB,SAASC,eAAT,CAAyB,CAC5CvC,OAAO,CAACuC,eAAD,CAAP,CACH,CAHD,EAICD,EAJD,CAII,cAJJ,CAIoB,SAASE,kBAAT,CAA6BC,OAA7B,CAAqC,CACrDhB,OAAO,CAACC,GAAR,CAAY,CAACc,kBAAkB,CAACA,kBAApB,CAAuCC,OAAO,CAACA,OAA/C,CAAZ,EACH,CAND,EAOCH,EAPD,CAOI,SAPJ,CAOe,SAASG,OAAT,CAAiB,CAC5BhB,OAAO,CAACC,GAAR,CAAY,CAACe,OAAO,CAACA,OAAT,CAAZ,EACAtC,MAAM,CAACuC,QAAP,CAAgBC,MAAhB,GACH,CAVD,EAWCL,EAXD,CAWI,OAXJ,CAWa,SAASd,KAAT,CAAeiB,OAAf,CAAuB,CAChChB,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAZ,EACAxC,MAAM,CAAC,CAACuB,KAAK,CAACA,KAAP,CAAaiB,OAAO,CAACA,OAArB,CAAD,CAAN,CACH,CAdD,EAeH,CAhBM,CAAP,CAiBH,CA5RS,CA6RV;AACA4B,KA9RU,iBA8RH,CACH,MAAO,IAAItE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0ByC,KAA1B,GAAkCxC,IAAlC,GAAyCvB,IAAzC,CAA8C,SAAS+D,KAAT,CAAgB,CAC1DrE,OAAO,CAACqE,KAAK,CAAC/C,WAAN,EAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CApSS,CAqSV;AACAgD,IAtSU,gBAsSJ,CACF,MAAO,IAAIvE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B0C,IAA1B,GAAiCzC,IAAjC,GAAwCvB,IAAxC,CAA6C,SAASgE,IAAT,CAAe,CACxDtE,OAAO,CAACsE,IAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CA5SS,CA6SV;AACAC,MA9SU,kBA8SF,CACJ,MAAO,IAAIxE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B2C,MAA1B,GAAmC1C,IAAnC,GAA0CvB,IAA1C,CAA+C,SAASiE,MAAT,CAAiB,CAC5DvE,OAAO,CAACuE,MAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CApTS,CAqTV;AACAC,YAtTU,wBAsTI,gBACV,MAAO,IAAIzE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,KAAI,CAACoE,KAAL,GAAa/D,IAAb,CAAkB,SAAU+D,KAAV,CAAiB,CAC/B,GAAGlE,MAAM,CAACkB,cAAP,GAA0BgD,KAA7B,CAAmC,CAC/BlE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B4C,YAA1B,GAAyC3C,IAAzC,CAA8C,CAACQ,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA9C,EAA4Ef,IAA5E,CAAiF,SAASmE,OAAT,CAAkB,CAC/FzE,OAAO,CAACG,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BgB,OAA1B,CAAkC,OAAlC,CAAD,CAAP,CACH,CAFD,EAGH,CAJD,IAIK,CACDxE,MAAM,CAAC,4BAAD,CAAN,CACH,CACJ,CARD,EASH,CAVM,CAAP,CAWH,CAlUS,CAmUV;AACAyE,2BApUU,sCAoUkBC,yBApUlB,CAoU4C,CAClD,MAAO,IAAI5E,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0B8C,2BAA1B,CAAsDC,yBAAtD,EAAiFvC,IAAjF,CAAsF,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAtF,EACCf,IADD,CACM,SAASQ,MAAT,CAAiB,CACnBd,OAAO,CAACc,MAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CA3US,CA4UV;AACAuC,UA7UU,sBA6UE,CACR,MAAO,IAAItD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0ByB,UAA1B,GAAuCxB,IAAvC,GAA8CvB,IAA9C,CAAmD,SAAS+C,UAAT,CAAqB,CACpErD,OAAO,CAACG,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BJ,UAA1B,CAAqC,OAArC,CAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAnVS,CAoVV;AACAuB,aArVU,wBAqVIC,IArVJ,CAqVS,CACf,MAAO,IAAI9E,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BgD,aAA1B,CAAwCzE,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBgB,IAAI,CAACf,QAAL,EAAxB,CAAxC,EAAkF1B,IAAlF,CAAuF,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAvF,EACCf,IADD,CACM,SAASQ,MAAT,CAAiB,CACnBd,OAAO,CAACc,MAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CA5VS,CA6VV;AACAgE,WA9VU,sBA8VEC,MA9VF,CA8VS,CACf,MAAO,IAAIhF,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BkD,WAA1B,CAAsC3E,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBkB,MAAM,CAACjB,QAAP,EAAxB,CAAtC,EAAkF1B,IAAlF,CAAuF,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAvF,EACCf,IADD,CACM,SAASQ,MAAT,CAAiB,CACnBd,OAAO,CAACc,MAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CArWS,CAsWV;AACA+B,WAvWU,uBAuWG,CACT,MAAO,IAAI9C,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BiB,WAA1B,GAAwChB,IAAxC,GAA+CvB,IAA/C,CAAoD,SAASuC,WAAT,CAAsB,CACtE7C,OAAO,CAACG,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBC,OAAlB,CAA0BZ,WAA1B,CAAsC,OAAtC,CAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CA7WS,CA8WV;AACAmC,cA/WU,yBA+WKD,MA/WL,CA+WY,CAClB,MAAO,IAAIhF,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BoD,cAA1B,CAAyC7E,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBkB,MAAM,CAACjB,QAAP,EAAxB,CAAzC,EAAqF1B,IAArF,CAA0F,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA1F,EACCf,IADD,CACM,SAASQ,MAAT,CAAiB,CACnBd,OAAO,CAACc,MAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CAtXS,CAuXV;AACAmE,MAxXU,iBAwXHF,MAxXG,CAwXI,CACV,MAAO,IAAIhF,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BqD,MAA1B,CAAiC9E,MAAM,CAACM,IAAP,CAAY+C,KAAZ,CAAkBK,KAAlB,CAAwBkB,MAAM,CAACjB,QAAP,EAAxB,CAAjC,EAA6E1B,IAA7E,CAAkF,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAAlF,EACCf,IADD,CACM,SAASQ,MAAT,CAAiB,CACnBd,OAAO,CAACc,MAAD,CAAP,CACH,CAHD,EAIH,CALM,CAAP,CAMH,CA/XS,CAgYV;AACAoE,QAjYU,oBAiYA,iBACN,MAAO,IAAInF,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,MAAI,CAACoE,KAAL,GAAa/D,IAAb,CAAkB,SAAU+D,KAAV,CAAiB,CAC/B,GAAGlE,MAAM,CAACkB,cAAP,GAA0BgD,KAA7B,CAAmC,CAC/BlE,MAAM,CAACgB,UAAP,CAAkBS,OAAlB,CAA0BsD,QAA1B,GAAqC9C,IAArC,CAA0C,CAACC,IAAI,CAAClC,MAAM,CAACkB,cAAb,CAA1C,EAAwEf,IAAxE,CAA6E,SAAS6E,GAAT,CAAc,CACvFnF,OAAO,CAACmF,GAAD,CAAP,CACH,CAFD,EAGH,CAJD,IAIK,CACDlF,MAAM,CAAC,4BAAD,CAAN,CACH,CACJ,CARD,EASH,CAVM,CAAP,CAWH,CA7YS,CA8YV;AACAmF,cA/YU,0BA+YM,CACZ,MAAOjF,CAAAA,MAAM,CAACgB,UAAP,CAAkBkE,MAAlB,CAAyBC,SAAzB,CAAmC,EAAnC,CAAsC,CAACC,SAAS,CAAE,CAAZ,CAAeC,OAAO,CAAE,QAAxB,CAAtC,CAAP,CACH,CAjZS,CAkZV;AACAC,eAnZU,2BAmZO,CACb,MAAO,IAAI1F,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCE,MAAM,CAACgB,UAAP,CAAkBkE,MAAlB,CAAyBK,UAAzB,CAAoC,CAACH,SAAS,CAAE,CAAZ,CAAeC,OAAO,CAAE,QAAxB,CAApC,CAAsE,SAAUhE,KAAV,CAAiBmE,KAAjB,CAAwB,CAC1F3F,OAAO,CAAC2F,KAAD,CAAP,CACH,CAFD,EAGH,CAJM,CAAP,CAKH,CAzZS,CA0ZV;AACAC,SA3ZU,qBA2ZC,CACPzF,MAAM,CAACgB,UAAP,CAAkBkE,MAAlB,CAAyBO,SAAzB,CAAmC,CAACL,SAAS,CAAE,CAAZ,CAAnC,CAAmD,SAAS/D,KAAT,CAAgBmE,KAAhB,CAAsB,CACrElE,OAAO,CAACC,GAAR,CAAY,CAACkE,SAAS,CAACD,KAAX,CAAZ,EACH,CAFD,EAEGrD,EAFH,CAEM,WAFN,CAEmB,SAASuD,cAAT,CAAwB,CACxCpE,OAAO,CAACC,GAAR,CAAY,CAACoE,wBAAwB,CAACD,cAA1B,CAAZ,EACF,CAJD,EAIGvD,EAJH,CAIM,MAJN,CAIc,SAASqD,KAAT,CAAe,CAC1BlE,OAAO,CAACC,GAAR,CAAY,CAACqE,UAAU,CAACJ,KAAZ,CAAZ,EACF,CAND,EAMGrD,EANH,CAMM,SANN,CAMiB,SAASqD,KAAT,CAAe,CAC5BlE,OAAO,CAACC,GAAR,CAAY,CAACsE,aAAa,CAACL,KAAf,CAAZ,EACH,CARD,EAQGrD,EARH,CAQM,OARN,CAQe,SAASd,KAAT,CAAgBiB,OAAhB,CAAyB,CACpChB,OAAO,CAACC,GAAR,CAAY,CAACuE,WAAW,CAACzE,KAAb,CAAmBiB,OAAO,CAACA,OAA3B,CAAZ,EACH,CAVD,EAWH,CAvaS,CAAd,CA0aA,cAAe5C,CAAAA,MAAf","sourcesContent":["import Web3 from \"web3\";\r\nimport abi from './ZombieCore.json'\r\nimport ContractAddress from './ContractAddress'\r\n\r\nconst MyWeb3 ={\r\n    init() {\r\n        /*\r\n        '1': Ethereum Main Network\r\n        '2': Morden Test network\r\n        '3': Ropsten Test Network\r\n        '4': Rinkeby Test Network\r\n        '5': Goerli Test Network\r\n        '42': Kovan Test Network\r\n        */\r\n        return new Promise((resolve, reject) => {\r\n            //let currentChainId = parseInt(window.ethereum.chainId, 16)\r\n            let ethereum = window.ethereum\r\n            //禁止自动刷新，metamask要求写的\r\n            ethereum.autoRefreshOnNetworkChange = false\r\n            //开始调用metamask\r\n            ethereum.enable().then(function (accounts) {\r\n                //初始化provider\r\n                let provider = window['ethereum'] || window.web3.currentProvider\r\n                //初始化Web3\r\n                window.web3 = new Web3(provider)\r\n                //获取到当前以太坊网络id\r\n                window.web3.eth.net.getId().then(function (result) {\r\n                    let currentChainId = result\r\n                    //设置最大监听器数量，否则出现warning\r\n                    window.web3.currentProvider.setMaxListeners(300)\r\n                    //从json获取到当前网络id下的合约地址\r\n                    let currentContractAddress = ContractAddress[currentChainId]\r\n                    if(currentContractAddress !== undefined){\r\n                        //实例化合约\r\n                        window.MyContract = new window.web3.eth.Contract(abi.abi,currentContractAddress)\r\n                        //获取到当前默认的以太坊地址\r\n                        window.defaultAccount = accounts[0].toLowerCase()\r\n                        //that.allEvents(window.MyContract)\r\n                        resolve(true)\r\n                    }else{\r\n                        reject('Unknow Your ChainId:'+currentChainId)\r\n                    }\r\n                })\r\n            }).catch(function (error) {\r\n                console.log(error)\r\n            })\r\n        })\r\n    },\r\n    //僵尸总量\r\n    zombieCount() {\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.zombieCount().call().then(function(zombieCount) {\r\n                resolve(zombieCount)\r\n            })\r\n        })\r\n    },\r\n    //获得单个僵尸数据\r\n    zombies(zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            if(zombieId>=0){\r\n                window.MyContract.methods.zombies(zombieId).call().then(function(zombies) {\r\n                    resolve(zombies)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    //获得僵尸拥有者地址\r\n    zombieToOwner(zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            if(zombieId>=0){\r\n                window.MyContract.methods.zombieToOwner(zombieId).call().then(function(zombies) {\r\n                    resolve(zombies.toLowerCase())\r\n                })\r\n            }\r\n        })\r\n    },\r\n    //获得当前用户的所有僵尸id\r\n    getZombiesByOwner(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.getZombiesByOwner(window.defaultAccount).call().then(function(zombies) {\r\n                resolve(zombies)\r\n            })\r\n        })\r\n    },\r\n    //创建随机僵尸\r\n    createZombie(_name){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.createZombie(_name).send({from:window.defaultAccount})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //购买僵尸\r\n    buyZombie(_name){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.zombiePrice().call().then(function(zombiePrice) {\r\n                window.MyContract.methods.buyZombie(_name).send({from:window.defaultAccount,value:zombiePrice})\r\n                .on('transactionHash', function(transactionHash){\r\n                    resolve(transactionHash)\r\n                })\r\n                .on('confirmation', function(confirmationNumber, receipt){\r\n                    console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n                })\r\n                .on('receipt', function(receipt){\r\n                    console.log({receipt:receipt})\r\n                    window.location.reload()\r\n                })\r\n                .on('error', function(error,receipt){\r\n                    console.log({error:error,receipt:receipt})\r\n                    reject({error:error,receipt:receipt})\r\n                })\r\n            })\r\n        })\r\n    },\r\n    //僵尸对战\r\n    attack(_zombieId,_targetId){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.attack(_zombieId,_targetId).send({from:window.defaultAccount})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //僵尸改名\r\n    changeName(_zombieId,_name){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.changeName(_zombieId,_name).send({from:window.defaultAccount})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //僵尸喂食\r\n    feed(_zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.feed(_zombieId).send({from:window.defaultAccount})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //僵尸付费升级\r\n    levelUp(_zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.levelUpFee().call().then(function(levelUpFee) {\r\n                window.MyContract.methods.levelUp(_zombieId).send({from:window.defaultAccount,value:levelUpFee})\r\n                .on('transactionHash', function(transactionHash){\r\n                    resolve(transactionHash)\r\n                })\r\n                .on('confirmation', function(confirmationNumber, receipt){\r\n                    console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n                })\r\n                .on('receipt', function(receipt){\r\n                    console.log({receipt:receipt})\r\n                    window.location.reload()\r\n                })\r\n                .on('error', function(error,receipt){\r\n                    console.log({error:error,receipt:receipt})\r\n                    reject({error:error,receipt:receipt})\r\n                })\r\n            })\r\n        })\r\n    },\r\n    //获取僵尸喂食次数\r\n    zombieFeedTimes(_zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.zombieFeedTimes(_zombieId).call().then(function(zombieFeedTimes) {\r\n                resolve(zombieFeedTimes)\r\n            })\r\n        })\r\n    },\r\n    //获取最低售价\r\n    minPrice(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.minPrice().call().then(function(minPrice) {\r\n                resolve(window.web3.utils.fromWei(minPrice,'ether'))\r\n            })\r\n        })\r\n    },\r\n    //获取税金\r\n    tax(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.tax().call().then(function(tax) {\r\n                resolve(window.web3.utils.fromWei(tax,'ether'))\r\n            })\r\n        })\r\n    },\r\n    //出售我的僵尸\r\n    saleMyZombie(_zombieId,_price){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.saleMyZombie(_zombieId,window.web3.utils.toWei(_price.toString())).send({from:window.defaultAccount})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //获得商店里僵尸数据\r\n    zombieShop(_zombieId){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.zombieShop(_zombieId).call().then(function(shopInfo) {\r\n                shopInfo.price = window.web3.utils.fromWei(shopInfo.price,'ether')\r\n                resolve(shopInfo)\r\n            })\r\n        })\r\n    },\r\n    //获得商店所有僵尸\r\n    getShopZombies(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.getShopZombies().call().then(function(zombieIds) {\r\n                resolve(zombieIds)\r\n            })\r\n        })\r\n    },\r\n    //购买商店里的僵尸\r\n    buyShopZombie(_zombieId,_price){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.buyShopZombie(_zombieId).send({from:window.defaultAccount,value:window.web3.utils.toWei(_price.toString())})\r\n            .on('transactionHash', function(transactionHash){\r\n                resolve(transactionHash)\r\n            })\r\n            .on('confirmation', function(confirmationNumber, receipt){\r\n                console.log({confirmationNumber:confirmationNumber,receipt:receipt})\r\n            })\r\n            .on('receipt', function(receipt){\r\n                console.log({receipt:receipt})\r\n                window.location.reload()\r\n            })\r\n            .on('error', function(error,receipt){\r\n                console.log({error:error,receipt:receipt})\r\n                reject({error:error,receipt:receipt})\r\n            })\r\n        })\r\n    },\r\n    //获得合约拥有者地址\r\n    owner(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.owner().call().then(function(owner) {\r\n                resolve(owner.toLowerCase())\r\n            })\r\n        })\r\n    },\r\n    //获得合约名称\r\n    name(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.name().call().then(function(name) {\r\n                resolve(name)\r\n            })\r\n        })\r\n    },\r\n    //获得合约标识\r\n    symbol(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.symbol().call().then(function(symbol) {\r\n                resolve(symbol)\r\n            })\r\n        })\r\n    },\r\n    //查询余额\r\n    checkBalance(){\r\n        return new Promise((resolve, reject) => {\r\n            this.owner().then(function (owner) {\r\n                if(window.defaultAccount === owner){\r\n                    window.MyContract.methods.checkBalance().call({from:window.defaultAccount}).then(function(balance) {\r\n                        resolve(window.web3.utils.fromWei(balance,'ether'))\r\n                    })\r\n                }else{\r\n                    reject('You are not contract owner')\r\n                }\r\n            })\r\n        })\r\n    },\r\n    //设置攻击胜率\r\n    setAttackVictoryProbability(_attackVictoryProbability){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.setAttackVictoryProbability(_attackVictoryProbability).send({from:window.defaultAccount})\r\n            .then(function(result) {\r\n                resolve(result)\r\n            })\r\n        })\r\n    },\r\n    //获得升级费\r\n    levelUpFee(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.levelUpFee().call().then(function(levelUpFee) {\r\n                resolve(window.web3.utils.fromWei(levelUpFee,'ether'))\r\n            })\r\n        })\r\n    },\r\n    //设置升级费\r\n    setLevelUpFee(_fee){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.setLevelUpFee(window.web3.utils.toWei(_fee.toString())).send({from:window.defaultAccount})\r\n            .then(function(result) {\r\n                resolve(result)\r\n            })\r\n        })\r\n    },\r\n    //设置最低售价\r\n    setMinPrice(_value){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.setMinPrice(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount})\r\n            .then(function(result) {\r\n                resolve(result)\r\n            })\r\n        })\r\n    },\r\n    //获得僵尸售价\r\n    zombiePrice(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.zombiePrice().call().then(function(zombiePrice) {\r\n                resolve(window.web3.utils.fromWei(zombiePrice,'ether'))\r\n            })\r\n        })\r\n    },\r\n    //设置僵尸售价\r\n    setZombiePrice(_value){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.setZombiePrice(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount})\r\n            .then(function(result) {\r\n                resolve(result)\r\n            })\r\n        })\r\n    },\r\n    //设置税金\r\n    setTax(_value){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.methods.setTax(window.web3.utils.toWei(_value.toString())).send({from:window.defaultAccount})\r\n            .then(function(result) {\r\n                resolve(result)\r\n            })\r\n        })\r\n    },\r\n    //提款\r\n    withdraw(){\r\n        return new Promise((resolve, reject) => {\r\n            this.owner().then(function (owner) {\r\n                if(window.defaultAccount === owner){\r\n                    window.MyContract.methods.withdraw().send({from:window.defaultAccount}).then(function(res) {\r\n                        resolve(res)\r\n                    })\r\n                }else{\r\n                    reject('You are not contract owner')\r\n                }\r\n            })\r\n        })\r\n    },\r\n    //新僵尸事件\r\n    EventNewZombie(){\r\n        return window.MyContract.events.NewZombie({},{fromBlock: 0, toBlock: 'latest'})\r\n    },\r\n    //出售僵尸事件\r\n    EventSaleZombie(){\r\n        return new Promise((resolve, reject) => {\r\n            window.MyContract.events.SaleZombie({fromBlock: 0, toBlock: 'latest'},function (error, event) {\r\n                resolve(event)\r\n            })\r\n        })\r\n    },\r\n    //所有事件\r\n    allEvents(){\r\n        window.MyContract.events.allEvents({fromBlock: 0}, function(error, event){\r\n            console.log({allEvents:event})\r\n        }).on(\"connected\", function(subscriptionId){\r\n           console.log({connected_subscriptionId:subscriptionId})\r\n        }).on('data', function(event){\r\n           console.log({event_data:event})\r\n        }).on('changed', function(event){\r\n            console.log({event_changed:event})\r\n        }).on('error', function(error, receipt) { \r\n            console.log({event_error:error,receipt:receipt})\r\n        })\r\n    }\r\n}\r\n    \r\nexport default MyWeb3;"]},"metadata":{},"sourceType":"module"}